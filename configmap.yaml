apiVersion: v1
data:
  REPLICAS: "1"
  run.sh: |
    #!/bin/bash

    # KEYCLOAK_STANDALONE_HA_CONF="/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml"
    echo $DB_USER

    BASE_SCRIPT_DIR="${BASE_SCRIPT_DIR:-/scripts}"

    #    function setReplicas {
    #        local i_am_number=$(hostname | rev | cut -d'-' -f1 | rev)
    #        echo "==> I am instance number: $i_am_number"
    #        HOSTS=()
    #        for ((i=0; i<=i_am_number; i++)) {
    #            echo "===> Checking instance: keycloak-$i"
    #            if (curl -sS --retry 2 -m 4 --fail "http://keycloak-$i.keycloak:8080" > /dev/null; [ $? -eq 0 ]); then
    #                echo "===> Success! Hostname keycloak-$i reachable."
    #                HOSTS+=("keycloak-$i.keycloak[7600]")
    #            else
    #                echo "===> Failed! Hostname keycloak-$i unreachable."
    #            fi
    #        }
    #        KEYCLOAK_HOSTS=$(printf ",%s" "${HOSTS[@]}")
    #        export KEYCLOAK_HOSTS="${KEYCLOAK_HOSTS:1}"
    #        echo "=> Keycloak Hosts: $KEYCLOAK_HOSTS"
    #    }
    #    function injectReplicas {
    #        set +e
    #        if ! /opt/jboss/keycloak/bin/jboss-cli.sh --controller="127.0.0.1:9990" -c --commands='ls /subsystem=jgroups/stack=tcp/protocol=org.jgroups.protocols.TCPPING' | grep -qF "$KEYCLOAK_HOSTS"; then
    #            echo "=> INJECTION REQUIRED: Injecting following hosts: $KEYCLOAK_HOSTS"
    #            /opt/jboss/keycloak/bin/jboss-cli.sh --controller="127.0.0.1:9990" -c --commands='/subsystem=jgroups/stack=tcp/protocol=org.jgroups.protocols.TCPPING/property=initial_hosts/:remove()' || true
    #            /opt/jboss/keycloak/bin/jboss-cli.sh --controller="127.0.0.1:9990" -c --commands='/subsystem=jgroups/stack=tcp/protocol=org.jgroups.protocols.TCPPING/property=initial_hosts/:add(value="'$KEYCLOAK_HOSTS'"),reload' || true
    #            echo "-> Inject hosts result output:"
    #            echo "=== OUTPUT BEGIN ==="
    #            echo "$(/opt/jboss/keycloak/bin/jboss-cli.sh --controller="127.0.0.1:9990" -c --commands='ls /subsystem=jgroups/stack=tcp/protocol=org.jgroups.protocols.TCPPING')"
    #            echo "=== OUTPUT END ==="
    #        else
    #            echo "-> No changes to inject"
    #        fi
    #        set -e
    #    }

    echo "Starting with args: $*"
    #cp "$BASE_SCRIPT_DIR/standalone-ha.xml" "$KEYCLOAK_STANDALONE_HA_CONF"
    #setReplicas
    #sed -i 's#__KEYCLOAK_HOSTS__#'"$KEYCLOAK_HOSTS"'#g' "$KEYCLOAK_STANDALONE_HA_CONF" || \
    #    { echo "Couldn't sed edit (KEYCLOAK_HOSTS) standalone-ha.xml. Exiting ..."; exit 1; }
    #sed -i 's#__KEYCLOAK_OWNERS_COUNT__#'$KEYCLOAK_OWNERS_COUNT'#g' "$KEYCLOAK_STANDALONE_HA_CONF" || \
    #    { echo "Couldn't sed edit (KEYCLOAK_OWNERS_COUNT) the standalone-ha.xml. Exiting ..."; exit 1; }

    #    if [ $KEYCLOAK_MGMT_USER ] && [ $KEYCLOAK_MGMT_PASSWORD ]; then
    #        /opt/jboss/keycloak/bin/add-user-keycloak.sh --user $KEYCLOAK_MGMT_USER --password $KEYCLOAK_MGMT_PASSWORD --enable --realm ManagementRealm -cw
    #    fi

    sleep 100000
    # exec /opt/jboss/tools/docker-entrypoint.sh -b=$MY_POD_IP -bmanagement=127.0.0.1 "$@"
kind: ConfigMap
metadata:
  labels:
    app: keycloak
  name: keycloak-scripts-cm
---
apiVersion: v1
data:
  DB_VENDOR: postgres
  DB_ADDR: solution-test-mgmt-db.postgres.database.azure.com 
  DB_PORT: "5432"
  DB_DATABASE: "keycloak"
  DB_USER: "postgres@solution-test-mgmt-db.postgres.database.azure.com"
  JDBC_PARAMS: "sslmode=require"
  KEYCLOAK_USER: "keycloak"
  BASE_SCRIPT_DIR: "/scripts"
  KEYCLOAK_OWNERS_COUNT: "1"
kind: ConfigMap
metadata:
  labels:
    app: keycloak
  name: keycloak-env
